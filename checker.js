import TelegramBot from 'node-telegram-bot-api';
import { TELEGRAM_TOKEN, CHANNEL_ID } from './config.js';
import { getExpiredUsers, getExpiringUsers } from './db.js';

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: false });

async function checkSubscriptions() {
  console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫...');

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞ 24 —á–∞—Å–∞ –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
  await new Promise(resolve => {
    getExpiringUsers(async (users) => {
      for (const user of users) {
        try {
          await bot.sendMessage(
            user.user_id,
            '‚è≥ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞. –ß—Ç–æ–±—ã –æ—Å—Ç–∞—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª–µ, –ø—Ä–æ–¥–ª–∏—Ç–µ –µ—ë —á–µ—Ä–µ–∑ /pay.'
          );
          console.log(`üì® –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${user.user_id}`);
        } catch (err) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ ${user.user_id}:`, err.message);
        }
      }
      resolve();
    });
  });

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ç—ë–∫—à–∏–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
  await new Promise(resolve => {
    getExpiredUsers(async (users) => {
      for (const user of users) {
        try {
          await bot.sendMessage(
            user.user_id,
            '‚ùå –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞. –í—ã –±—É–¥–µ—Ç–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–∞–Ω–∞–ª–∞.'
          );
          await bot.banChatMember(CHANNEL_ID, user.user_id);
          await bot.unbanChatMember(CHANNEL_ID, user.user_id);
          console.log(`üö´ –£–¥–∞–ª—ë–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞: ${user.user_id}`);
        } catch (err) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ${user.user_id}:`, err.message);
        }
      }
      resolve();
    });
  });

  console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
}

checkSubscriptions();
